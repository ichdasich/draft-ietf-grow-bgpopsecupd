{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-04-01T00:20:19.019614+00:00",
  "repo": "ichdasich/draft-ietf-grow-bgpopsecupd",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOKcyvv850nwyp",
      "title": "Add note on honoring GSHUT on IXPs",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/1",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "At the moment the draft does not discuss honoring GSHUT on IXPs.\r\n\r\nAs this is crucial for being able to drain traffic, adding a note might be useful.",
      "createdAt": "2023-10-23T08:00:57Z",
      "updatedAt": "2024-01-26T08:52:29Z",
      "closedAt": "2024-01-26T08:52:29Z",
      "comments": []
    },
    {
      "number": 2,
      "id": "I_kwDOKcyvv850nxNw",
      "title": "Discuss use of lpref on IXP RS",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/2",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Adding a note on the use of lpref on IXPs that prevent draining traffic (related to #1) might make sense.",
      "createdAt": "2023-10-23T08:02:00Z",
      "updatedAt": "2024-01-26T08:52:28Z",
      "closedAt": "2024-01-26T08:52:27Z",
      "comments": []
    },
    {
      "number": 3,
      "id": "I_kwDOKcyvv850nx46",
      "title": "Add note on need for individual judgement",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/3",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "As noted by GD, it is still a \"my network, my rules\" thing. The introduction should explicitly mention that the BP should be considered by individual operators, and there may be very good reasons to deviate, e.g., limited vendor support.",
      "createdAt": "2023-10-23T08:03:24Z",
      "updatedAt": "2024-01-26T10:01:22Z",
      "closedAt": "2024-01-26T10:01:22Z",
      "comments": [
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "in general, the abstract needs some attention; fix references etcetc",
          "createdAt": "2024-01-26T09:02:44Z",
          "updatedAt": "2024-01-26T09:02:44Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOKcyvv850nyW8",
      "title": "Discussing MED based oscilation (RFC7964)",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/4",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "With RS MED can lead to route oscillation overloading speakers. This is discussed in RFC7964, and a note on monitoring for that/precautions might be useful.",
      "createdAt": "2023-10-23T08:04:27Z",
      "updatedAt": "2024-01-26T09:37:41Z",
      "closedAt": "2024-01-26T09:37:41Z",
      "comments": []
    },
    {
      "number": 5,
      "id": "I_kwDOKcyvv851CI_5",
      "title": "Expand Community filtering",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/5",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Martin Pels notes:\r\n- I think extended (RFC4360) communities should also be added here.\r\n- Another point to add in this section is scrubbing communities from a received route if the number of attached communities is excessively high (e.g. > 100).",
      "createdAt": "2023-10-26T12:50:13Z",
      "updatedAt": "2024-01-26T08:07:14Z",
      "closedAt": "2024-01-26T08:07:14Z",
      "comments": []
    },
    {
      "number": 6,
      "id": "I_kwDOKcyvv851CJSB",
      "title": "Adjust attribute scrubbing",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/6",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Martin Pels notes:\r\n\r\n- Add MAY for scrubbing of attributes\r\n\r\n\"operators MAY opt to scrub all BGP attributes known to cause service \r\ndisruptions\"\r\n\r\nI would suggest replacing the word \"all\" with \"specific\", or to add a \r\nline explicitly clarifying not to scrub unknown transitive attributes.",
      "createdAt": "2023-10-26T12:50:53Z",
      "updatedAt": "2024-01-26T07:45:39Z",
      "closedAt": "2024-01-26T07:45:39Z",
      "comments": []
    },
    {
      "number": 7,
      "id": "I_kwDOKcyvv852ApkW",
      "title": "Add to 7.2.2 or similar that using communities to signal validation status is a bad idea",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/7",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "appending a community to signal the validation status of a prefix is generally considered a bad idea",
      "createdAt": "2023-11-06T19:09:03Z",
      "updatedAt": "2024-02-06T10:33:44Z",
      "closedAt": "2024-01-23T14:54:59Z",
      "comments": [
        {
          "author": "job",
          "authorAssociation": "NONE",
          "body": "Yes.\r\n\r\nI have plans to specifically address this issue in a new internet-draft\r\n\u201cAssociating validation states with BGP communities considered harmful\u201d.\r\n\r\nI think it\u2019s worth spending a few pages on this on *why* exactly it\u2019s a bad\r\nidea. Perhaps useful to refer to that to-be-written doc instead of pulling\r\nin walls of text?\r\n",
          "createdAt": "2023-11-06T19:16:12Z",
          "updatedAt": "2023-11-06T19:16:12Z"
        },
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "Makes sense; Will keep an eye out for the draft and use a template reference until it is out.",
          "createdAt": "2023-11-07T17:27:17Z",
          "updatedAt": "2023-11-07T17:27:17Z"
        },
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "Closed; Now recommending filtering outbound when using those (due to an ongoing migration away from them).\r\n",
          "createdAt": "2024-01-23T14:54:59Z",
          "updatedAt": "2024-01-23T14:54:59Z"
        },
        {
          "author": "job",
          "authorAssociation": "NONE",
          "body": "Reference https://datatracker.ietf.org/doc/draft-spaghetti-sidrops-avoid-rpki-state-in-bgp/",
          "createdAt": "2024-02-06T10:04:58Z",
          "updatedAt": "2024-02-06T10:04:58Z"
        },
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "Added",
          "createdAt": "2024-02-06T10:33:44Z",
          "updatedAt": "2024-02-06T10:33:44Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOKcyvv856VG8y",
      "title": "Discuss idempotency for automation/config updates",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/8",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-21T12:40:43Z",
      "updatedAt": "2024-01-26T09:01:16Z",
      "closedAt": "2024-01-26T09:01:16Z",
      "comments": []
    },
    {
      "number": 9,
      "id": "I_kwDOKcyvv8580HUs",
      "title": "Issue with definition of upstream; Align with ASPA",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/9",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "```\r\n2. The meanings of \"upstream\" in this draft and the ASPA draft are different. According to the term definition in this draft, the ASPA upstream verification should be conducted for the routes from *downstream* or peer. \r\nIn section 3: \"\r\nUpstream:\r\n      In a direct relationship between two ASes the one providing\r\n      upstream to the other.  (See: [RFC9234], also known as the\r\n      provider in a customer-provider relationship.)\r\n\"\r\nIn section 7.2.2: \"\r\nIn [I-D.ietf-sidrops-aspa-verification], see following sections based\r\n   on the neighbor relationship:\r\n\r\n   *  Section 6.1 for routes received from upstreams and lateral peers.\r\n\r\n   *  Section 6.2 for routes received from downstreams and mutual-\r\n      transits.\r\n\"\r\n```",
      "createdAt": "2024-01-22T14:24:54Z",
      "updatedAt": "2024-01-26T10:22:30Z",
      "closedAt": "2024-01-26T10:22:30Z",
      "comments": [
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "```\r\n3. The term \"Mutual Upstream\" is not used. It should be \"mutual transit\" or \"sibling\". Also, some terms should be unified, e.g., \"upstream\" \"upstream provider\"; \"Internet peer\" \"lateral peer\" \"peer\"; etc.\r\n```",
          "createdAt": "2024-01-22T14:25:26Z",
          "updatedAt": "2024-01-22T14:25:26Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOKcyvv8580Hx1",
      "title": "Clarify that both otc and aspa are needed",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/10",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "4. In my understanding, some recommended operations have overlapped protections/functions. For example, both OTC RFC 9234 and RPKI-ASPA can detect route leaks. Should an operator deploy both techniques or just one of them (under which conditions)?",
      "createdAt": "2024-01-22T14:25:47Z",
      "updatedAt": "2024-01-26T07:43:55Z",
      "closedAt": "2024-01-26T07:43:55Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDOKcyvv8580IgA",
      "title": "General Read-Through comments provided",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/11",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "```\r\n# 1.  Introduction\r\n# \r\n#    The Border Gateway Protocol (BGP), specified in [RFC4271], is the\r\n#    protocol used in the Internet to exchange routing information between\r\n#    network domains.  BGP does not directly include mechanisms that\r\n#    control whether the routes exchanged conform to the various\r\n#    guidelines defined by the Internet community.\r\n\r\nADD HERE:\r\n\r\nBesides, BGP by its design does not have any direct way to protect itself\r\nagainst possible security-related threats.\r\n\r\n#  This document intends\r\n#    to both summarize common existing guidelines and help operators apply\r\n#    coherent BGP policies.\r\n\r\nADD HERE:\r\n\r\nand apply recommended security measures to protect the operation of BGP\r\nprotocol on their BGP-speaking routers.\r\n\r\n# 4.1.  BGP Network Layer Protection\r\n# \r\n#    To protect a BGP speaker on the network layer, the ability to connect\r\n#    to TCP port 179 on the local device should be restricted to known\r\n#    addresses that are permitted to become a BGP neighbor.  Experience\r\n#    has shown that the natural protection TCP should offer is not always\r\n#    sufficient, as it is sometimes run in control-plane software.\r\n\r\nREMARK (AUTHOR ONLY): this depends on the implementation. Cisco uses listen() calls on explicitly\r\nconfigured neighbor IP addresses only, while not allowing multiple TCP sessions\r\nbetween BGP endpoints. They had it like that from Day 0. OTOH, Juniper, relying on\r\nFreeBSD socket interface, initialy in 1998 had BGP listen on (INADDR_ANY, 179/tcp).\r\nTherefore, on Junipers, supplemental firewall filters were needed from Day 0.\r\nLater on, I think in Junos 9 or so, this was fixed, but still having firewall filters\r\nis highly recommended.\r\n\r\n# 4.2.  BGP Speaker Management Interface Protection\r\n\r\nREMARK (AUTHOR ONLY): I think this whole section should be removed. At least the 1st\r\nparagraph. Or you can remove the story about VRFs and just keep the reference to\r\n[RFC6192]. The reason is that the management traffic story is quite complex, in the\r\nway that it really requires a new RFC. Seriously. :-)\r\n\r\nThe full taxonomy of routing contexts used for network management can be summarized as\r\nfollows:\r\n\r\n1. Out-of-Band (OOB) Management - routers have a dedicated interface for mgmt traffic.\r\n2. In-band (IB) Management - mgmt traffic uses normal, revenue interfaces.\r\n3. BOTH - combined (e.g. IB as the default method, OOB as a backup - yes, nightmare!)\r\n\r\nAnd then, each of the above has two flavors:\r\n\r\nA) Management traffic in the default routing context (a.k.a. \"GRT context\"), or:\r\nB) Management traffic in a separate routing context (a.k.a. \"Management VRF\"):\r\n   (i)  Mgmt VRF signaled automatically outside the routers (e.g. MPLS L3 VPN), or:\r\n   (ii) Mgmt VRF local-only to the router (e.g. VRF-Lite, Virtual Router)\r\n\r\nSo, you have 1A, 1B, 2A, 2B ... plus 2 sub-flavors of the B-option (i, ii).\r\nNot all vendors can do all of those.\r\n\r\n# 5.1.1.  Integrity Verification and Authentication\r\n# \r\n#    MD5 protection of the TCP session header, described in [RFC5925], was\r\n#    the first available mechanism to protect the integrity of a BGP\r\n#    session.  It has been obsoleted by the TCP Authentication Option\r\n#    (TCP-AO; [RFC5925]), which offers stronger protection.  While MD5 is\r\n#    still the most used mechanism due to its availability in vendors'\r\n#    equipment, TCP-AO SHOULD be preferred when implemented by both sides\r\n#    of a session.\r\n\r\nADD TEXT: Optionally, if TCP-AO is not supported, while both sides of the BGP\r\nsession can support a stronger authentication algorithm than MD5, such as\r\nSHA-1 or SHA-256, using the stronger method SHOULD be considered. Aside of that,\r\nusing keychain-based cryptographic keys lifecycle management, as suggested in\r\n[RFC6518], is highly RECOMMENDED.\r\n\r\n#    The drawback of TCP session protection is additional configuration\r\n#    and management overhead for the maintenance of authentication\r\n#    information (for example, MD5 passwords).  Protection of TCP sessions\r\n#    used by BGP hence MAY be enabled even when BGP sessions are\r\n#    established over shared networks where spoofing can be done (like\r\n#    IXPs), but operators are RECOMMENDED to consider the trade-offs and\r\n#    to apply TCP session protection where appropriate.\r\n\r\nREWRITE:\r\n\r\nThe drawback of TCP session protection is additional configuration and management overhead for the\r\nmaintenance of authentication information (for example, MD5 passwords). In either case, protection\r\nof TCP sessions used by BGP MUST be enabled when BGP sessions are established over shared networks\r\nwhere risk of spoofing is high (like IXPs). Operators are RECOMMENDED to consider the trade-offs\r\nand apply BGP session protection on all other external BGP sessions as well.\r\n\r\nAside of this, most vendors use simple, reverse-decryptable password hash algorithm to store\r\nshared secret keys for BGP (and other routing protocols) in the device configuration files. While\r\nthis practice simplifies password management tasks, since the passwords can always easily be\r\ndeciphered, a risk of information leak, by incidental sharing of router configuration snippets,\r\nis high. Some vendors have an option to protect those passwords using a stronger altorithm, with\r\nthe option to show cleartext passwords upon entering a master key. Using such mechanisms, where\r\npossible, is highly RECOMMENDED.\r\n\r\n#    Furthermore, operators SHOULD block spoofed packets (packets with a\r\n#    source IP address not belonging to their IP address space) at all\r\n#    edges of their network (see [RFC2827] and [RFC3704] ).  This protects\r\n#    the TCP session used by Internal BGP (iBGP) from attackers outside\r\n#    the Autonomous System.  Similarly, the considerations for using non\r\n#    globally reachable addresses for links handling BGP sessions from\r\n#    Section 4.1 apply accordingly.\r\n\r\nADD:\r\n\r\nAside of that, as an additional security measure, iBGP sessions SHOULD also be protected using\r\nthe authentication mechanisms discussed above.\r\n\r\n# 5.1.2.  Defending Against PMTUD Related Attacks\r\n# \r\n#    In 2018 an attack on BGP was described in the literature which claims\r\n#    to enable BGP route injection without Layer 2 adjacency by leveraging\r\n#    PMTUD, see ([FENG-22]).  The attack leverages packet fragmentation to\r\n#    bypass standard TCP protection mechanisms, so routes can be injected\r\n#    into an established BGP session.  While the attack would be mitigated\r\n#    by the integrity mechanisms suggested in Section 5.1.1, operators\r\n#    SHOULD additionally take precautions to defend against these attacks,\r\n#    especially if authentication mechanisms are not in use.  To mitigate\r\n#    this attack, BGP speakers should not allow packet fragmentation on\r\n#    the control plane for BGP traffic between themselves and their\r\n#    neighbors.  This is feasible, as even on multi-hop sessions, the path\r\n#    MTU should be known to the operators, meaning that it can be\r\n#    statically and consistently configured for both speakers involved in\r\n#    a session to prevent the need for fragmentation.  Hence, operators\r\n#    SHOULD ensure that fragmentation is neither allowed nor necessary for\r\n#    BGP packets between two BGP speakers.  If this is not possible, a\r\n#    strict lower limit for the MTU SHOULD be configured.  Given that IPv6\r\n#    requires an MTU of at least 1280b, this value is the RECOMMENDED\r\n#    minimum.\r\n\r\nREMARK (AUTHOR ONLY): actually, it's not MTU, it's MSS. This feature is well-known\r\nas \"TCP MSS Clamping\". MSS is calculated as:\r\n\r\ntcp.mss = (ip.mtu - 40) if (ip.version == 4) else (ip.mtu - 60)\r\n\r\nSee:\r\n\r\nhttps://bgp.tools/kb/understanding-tcp-mss\r\n\r\n# 7.  Dynamic Prefix Filtering\r\n# \r\n#    In this section, we discuss dynamic prefix filters, i.e., filters\r\n#    that decide whether a prefix should be im- or exported or not based\r\n#    on frequently changing parameters and external resources.\r\n\r\nREMARK (AUTHOR ONLY): Maybe at this point of text you should already provide a short\r\nreference to 7.2, where ROV/RPKI is discussed. Just to say something like:\r\n\r\n\"Using Route Origin Validation (ROV), wherever possible, SHOULD be preferred over\r\nusing IRR information. ROV is discussed in Chapter 7.2.\r\n\r\n# 7.1.3.  Recursively Computing Filters\r\n\r\n\r\nREMARK (AUTHOR ONLY): With the new version of IRRd, that will soon become used by\r\nall major IRRs, the need for recursion will become obsolete. Even now, IRRd offers\r\na simple query to grab prefixes from AS-SETs (!i, !g). Also, I'm not sure whether\r\nto refer to [bgpq4] - the tool might not exist in the future, especially having in\r\nmind that IRRd v4 has a JSON-based interface, which makes things much easier to\r\ngrab from IRRs.\r\n\r\nYou might want to get in touch with NTT guys & girls that maintain IRRd (they\r\npresented on RIPE87).\r\n\r\n# 7.3.  Inbound Filtering Prefixes Belonging to the Local AS\r\n\r\nREMARK (AUTHOR ONLY): This depends on the neighbor roles - whether they are customers,\r\npeers, transits. This section requires a bit of rework too. Or a reference to Chapter\r\n7.5.1 where BGP roles are discussed.\r\n\r\n# 7.6.2.  Prefixes on Routers Connected to an IXP\r\n# \r\n#    It is suggested (see also [APNICTRN-17]), that operators dedicate\r\n#    routers for connections to an IXP that SHOULD only carry routes from\r\n#    the ASes cone, and not a full-table or default-route.  This reduces\r\n#    the chance of accidental route leaks and prevents other IXP members\r\n#    from pointing default routes via the IXP LAN to such a router.\r\n\r\nADD TEXT: alternatively, using a separate routing context (e.g. VRF) for IXP peerings,\r\ncontaining only routes form the local AS cone, is a good option too.\r\n\r\n# 8.3.  AS Path Filtering\r\n\r\nTITLE CHANGE: AS_PATH Filtering\r\n\r\nREMARK: AS_PATH is being used in [RFC4271] as the official abbreviation of that attribute.\r\n\r\nADD THE FOLLOWING AT THE END OF THIS CHAPTER - with the following text:\r\n\r\nSome BGP implementations offer various advanced AS_PATH manipulation features, such as overriding or rewriting a part of the AS_PATH.\r\nFor instance, a very commonly used mechanism is the so-called \"AS Override\" feature, primarily intended for use in MPLS L3 VPNs,\r\nwhere the customer's AS number is overriden with the provider's AS number, to allow site-to-site communication where both customer\r\nsites use the  same AS number. Some vendors went even further, offering a possibility to fully rewrite or even delete the AS_PATH\r\nAttribute from the incoming our outgoing BGP Update messages. In principle, use of any AS_PATH modification mechanism except\r\nAS_PATH prepend in the public Internet SHOULD be avoided at all! Also, as discussed already, AS_PATH prepend SHOULD NOT be too\r\nexcessive. The \"AS Override\" feature MAY still be used in closed environments, such as VPNs not directly exchanging any NLRIs with\r\nthe Internet. AS_PATH rewriting/deleting SHOULD be avoided.\r\n\r\n# 8.5.  BGP Community Scrubbing\r\n\r\nADD TEXT: Extended BGP communities received from other ASNs SHOULD in principle be scrubbed. In the outbound direction,\r\nExtended BGP communities SHOULD be scrubbed.\r\n\r\nEXPLANATION (AUTHOR ONLY): when BGP routes are enclosed in an MPLS VRF, some vendors send route-target communities along\r\nwith advertisements to the external parties, that are treated as CE routers. While this may be useful in some cases\r\n(e.g. [RFC4364] - Inter-AS VPN Option B), using those communities in the Internet peering context is NOT RECOMMENDED.\r\n\r\n\r\n# 8.6.  BGP Attribute Scrubbing\r\n# \r\n#    Over the past years several instances of network disruptions due to\r\n#    routers being unable to process specific BGP attributes were\r\n#    encountered.  As such, operators MAY opt to scrub all BGP attributes\r\n#    known to cause service disruptions on their infrastructure.\r\n# \r\n\r\nADD TEXT:\r\n\r\nWhile being a very useful tool, BGP attribute scrubbing features MAY cause undesired effects and sometimes even large-scale outages.\r\nTherefore, this needs to be used with extreme care and treated as a last-resort temporary workaround - not a permanent solution.\r\nThis configuration SHOULD be removed when the problem, causing it to be introduced, is solved by a more stable means - e.g. by\r\nhardware and/or software replacement or upgrade. Besides, Mandatory BGP attributes and Optional Attributes commonly used in the\r\nInternet, such as AS_PATH, Communities, MED and so on MUST NOT be scrubbed ever!\r\n\r\nNEW CHAPTER:\r\n\r\n8.7. BGP Attribute Header Correction\r\n\r\nBGP attributes are stored within BGP UPDATE messages as a vector of Type-Length-Value (TLV) fields, while the Attribute Type field\r\ncontains a set of control bits, such as Optional Bit (set to 1 for Optional Attributes and 0 for Well-Known), Transitive Bit\r\n(specifying whether the attribute is Transitive - i.e. propagated outside the local AS or Non-Transitive - the opposite) and so on.\r\nWhile [RFC4271] mandates that the BGP speaker, receiving even a single UPDATE message containing a malformed combination of\r\nAttribute TLV headers, tears the BGP session down immediately, [RFC7606] allows the BGP implementors to optionally add various\r\nfeatures to the code, providing self-correction of malformed attributes in a limited number of cases.\r\n\r\nWherever possible, self-correcting mechanisms for BGP Attribute TLV headers SHOULD be used.\r\n\r\n\r\n# 9.1.1.  Order of Prefixfilters\r\n\r\nPROPOSAL: Chapter 9.1.1 should become 9.1.2. And the new Chapter 9.1.1, preceding 9.1.2, should be:\r\n\r\n9.1.1. Implicit Policies and Default Behavior\r\n\r\nAlmost all BGP implementations have a default, implicit all-permissive export/import behavior for BGP sessions, when no specific\r\nrouting policies are configured on the router. In other words, when a BGP session is configured without any explicit import and\r\nexport policy, BGP neighbors will send and accept any and all route announcements exchanged between them. Some vendors decided to\r\ndo exactly the opposite, having an implicit all-restrictive export/import behavior, denying NLRI exchange by default if no\r\nexplicit export/import policies are conofigured. While [RFC8212] finally standardized the default behavior of to be all-restrictive,\r\ndenying advertisements and acceptance of routes when no import/export policies are configured, many vendors kept their traditional\r\nimplicit behavior as-is.\r\n\r\nHaving in mind that most large networks nowadays are multi-vendor environments, while network owners very often change their\r\npreferred eqiupment vendors and suppliers, relying on vendor-specific implicit behavior is a bad idea. What one vendor allows by\r\ndefault, the other one precisely denies. Therefore, it is always RECOMMENDED to create an explicit import and\r\nexport policy on the BGP session, even if it is simple one, having a single, unconditional all-permissive rule. Aside of making\r\nthe router configuration clean, such a practice helps simplifying automation of router configurations, especially when migrating\r\nthe functionality of the router from one vendor to the other.\r\n\r\n\r\n# Chapter 9 - Chapter 9.1.2 (existing 9.1.1)\r\n\r\n#    Most vendors apply filters and changes (route maps, prefix filters,\r\n#    and other actions) to imported and exported NLRIs following a pre-\r\n#    defined sequence, while allowing redirection to other rules.\r\n\r\nREMARK - replace by the following:\r\n\r\nBGP is a policy-based routing protocol. [RFC4272] - 9.1 assumes the existence of export/import routing policies, controlling\r\nadvertisement/acceptance of NLRI. And [RFC8212] standardizes the all-denying behavior of BGP sessions where no explicit\r\nimport/export policies are configured. Most vendors implement import/export policies in a myriad of ways - from very basic\r\nprefix-based or AS_PATH-based filters, up to complex IF-THEN-like policy structures (typical names are: \"route maps\", \"route\r\npolicies\", \"policy statements\").\r\n\r\nRegardless of their complexities, all BGP policies consist of one or more rule sets, that are executed in a sequence, one\r\nafter another. The first rule set will scan the complete content of Adj-RIBs-in or Adj-RIBs-out; NLRIs matching the conditions\r\nof that rule set will be considered for further checks by the subsequent rule sets, while prefixes being denied will simply\r\nbe discarded. Therefore, each subsequent rule set should deal with a smaller subset of NLRIs than the previous ones. However,\r\nif the first rule set does not discard any prefix, the next rule set will scan the full content of the BGP routing tables again.\r\n```",
      "createdAt": "2024-01-22T14:27:11Z",
      "updatedAt": "2024-01-23T14:19:45Z",
      "closedAt": "2024-01-23T14:19:45Z",
      "comments": []
    },
    {
      "number": 12,
      "id": "I_kwDOKcyvv8581D_o",
      "title": "Rename to: Updated BGP Operations and Security",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/12",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-22T16:26:11Z",
      "updatedAt": "2024-01-23T12:20:32Z",
      "closedAt": "2024-01-23T12:20:32Z",
      "comments": []
    },
    {
      "number": 13,
      "id": "I_kwDOKcyvv859SWVB",
      "title": "Some terms need additional unification",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/13",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "There is still a pending comment saying:\r\n\r\n```\r\nSome terms should be unified, e.g., \"upstream\" \"upstream provider\"; \"Internet peer\" \"lateral peer\" \"peer\"; etc.\r\n```\r\n\r\nAdditionally, terms like NLRI etc need a full clean-run.\r\n\r\nHowever, this should be postponed until the document is feature-complete.",
      "createdAt": "2024-01-26T10:23:58Z",
      "updatedAt": "2024-07-04T07:51:02Z",
      "closedAt": "2024-07-04T07:51:02Z",
      "comments": [
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "Moved to https://github.com/ichdasich/draft-routing-operations-security/issues/4",
          "createdAt": "2024-07-04T07:51:02Z",
          "updatedAt": "2024-07-04T07:51:02Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOKcyvv85-QNPD",
      "title": "Add note on running own RPKI / and/or IRR validator",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/14",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Currently, there is no note on running one's own RPKI validator; This may, however, be prudent, see: https://github.com/job/draft-rpki-communities-harmful/pull/3\r\n\r\nAdditionally, there was a comment regarding the citation of bgpq4, which caches from NTT, usually. Similar notes may apply there, and--as noted re: irrd--features currently needing bgpq4 _should_ be part of irrd soon.",
      "createdAt": "2024-02-05T10:25:27Z",
      "updatedAt": "2024-07-04T07:50:25Z",
      "closedAt": "2024-07-04T07:50:25Z",
      "comments": [
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "Moved to https://github.com/ichdasich/draft-routing-operations-security/issues/3",
          "createdAt": "2024-07-04T07:50:25Z",
          "updatedAt": "2024-07-04T07:50:25Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOKcyvv85-jfC_",
      "title": "Revisit handling of RFC8097 Communities (non-transitive)",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/15",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-07T15:01:16Z",
      "updatedAt": "2024-07-04T07:49:56Z",
      "closedAt": "2024-07-04T07:49:56Z",
      "comments": [
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "Moved to https://github.com/ichdasich/draft-routing-operations-security/issues/2",
          "createdAt": "2024-07-04T07:49:56Z",
          "updatedAt": "2024-07-04T07:49:56Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDOKcyvv86BJS9o",
      "title": "Adjust suggestions for 8.2.2 as per comment on ML to focus on monitoring",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/16",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "```\r\nOn 26/10/2023 15:10, Tobias Fiebig wrote:\r\n > [..]\r\n >\r\n>> The global limits seem to offer no real benefit in addition to\r\n>> per-session limits. The referenced paper mentions Per-Origin AS\r\n>> limits, not the per-Neighbor AS limits mentioned in the draft. This\r\n>> also seems to be unimplementable, given that routers act\r\n>> independently on prefixes they receive.\r\n>\r\n> I think there are two points in here:\r\n> - The paper mentions per-origin, which i consider even more un-\r\n>    implementable than per-neighbor, which is why I restricted it to\r\n>    direct neighbors (similar to the idea of BCP38, that things 'should'\r\n>    be fine if everyone filters their downstreams.)\r\n> - Your implementability point is very valid.\r\n>\r\n> To address both points, it might make sense to move this to a softer\r\n> recommendation to \"Monitoring the global number of prefixes ingested\r\n> from each peer/downstream, and alerting if that number increases too\r\n> quickly\" or something similar;\r\n\r\nI think a recommendation for prefix limit monitoring and alerting for\r\nall peers would be a good replacement of section 8.2.2.\r\n\r\nSection 8.2.1 already mentions placing a prefix limit on upstreams, so\r\nthis should limit the risk of the attack described in 8.2.2 somewhat.\r\nBut it will have to be combined with monitoring, so that a customer AS\r\ndoes not cut itself off if the BGP table on all of their upstreams\r\neventually grows too large.\r\n\r\nKind regards,\r\nMartin\r\n```",
      "createdAt": "2024-03-04T12:11:58Z",
      "updatedAt": "2024-07-04T07:49:39Z",
      "closedAt": "2024-07-04T07:49:38Z",
      "comments": [
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "Moved to https://github.com/ichdasich/draft-routing-operations-security/issues/1",
          "createdAt": "2024-07-04T07:49:38Z",
          "updatedAt": "2024-07-04T07:49:38Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOKcyvv86Od4V2",
      "title": "Comment on formulation regarding valley free principle",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/issues/17",
      "state": "CLOSED",
      "author": "ichdasich",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Martin Pels noted:\r\n```\r\n\"The AS_PATH of redistributed NLRI MUST NOT violate the valley-free\r\nprinciple [RFC4012], i.e., [..]\"\r\n\r\nThere are more forms of route leaks than violations of \"valley-free\".\r\nAlso, I noticed the referenced RFC4012 does not actually mention the\r\nterm. I think you could remove this part of the bulletpoint, so start\r\nwith \"The redistributing AS MUST be authorized [..]\".\r\n```\r\nConsider reformulating this; Also figure ideal coverage of route leaks (or simplicity of touching the topic) out.",
      "createdAt": "2024-07-04T07:52:31Z",
      "updatedAt": "2024-09-30T13:29:07Z",
      "closedAt": "2024-09-30T13:29:07Z",
      "comments": [
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "fixed in https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/commit/85af63cf3618aa2a9462dffdbb772784f990d23a",
          "createdAt": "2024-09-30T13:28:58Z",
          "updatedAt": "2024-09-30T13:28:58Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 18,
      "id": "PR_kwDOKcyvv856-NK7",
      "title": "Fix an editorial error in the abstract",
      "url": "https://github.com/ichdasich/draft-ietf-grow-bgpopsecupd/pull/18",
      "state": "MERGED",
      "author": "stepnem",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes: 20f432f0409d (\"rewrite abstract\")",
      "createdAt": "2024-09-10T11:57:35Z",
      "updatedAt": "2024-09-14T09:59:54Z",
      "baseRepository": "ichdasich/draft-ietf-grow-bgpopsecupd",
      "baseRefName": "main",
      "baseRefOid": "f78879f1eb51f7c33a037ea526e00ce7a90f5539",
      "headRepository": "stepnem/draft-ietf-grow-bgpopsecupd",
      "headRefName": "editfix",
      "headRefOid": "af6d5c92d7c4da90bc781b93f486a938cba65dd6",
      "closedAt": "2024-09-14T09:59:54Z",
      "mergedAt": "2024-09-14T09:59:54Z",
      "mergedBy": "ichdasich",
      "mergeCommit": {
        "oid": "45e9a07c179c047fc7ee9cb2ade2da9aef635299"
      },
      "comments": [
        {
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "body": "Looks good to me, thanks!",
          "createdAt": "2024-09-14T09:57:39Z",
          "updatedAt": "2024-09-14T09:57:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKcyvv86JWqXV",
          "commit": {
            "abbreviatedOid": "af6d5c9"
          },
          "author": "ichdasich",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Editorial change; Straight forward, lgtm.",
          "createdAt": "2024-09-14T09:58:52Z",
          "updatedAt": "2024-09-14T09:58:52Z",
          "comments": []
        }
      ]
    }
  ]
}